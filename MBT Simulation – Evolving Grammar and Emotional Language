MBT Simulation â€“ Evolving Grammar and Emotional Language
This update begins teaching the symbolic agents grammar and emotional association. Each family gains a vocabulary with symbol pair rules (proto-grammar), and emotional states influence memory retention and bonding. This creates a foundation for emotional language and personality divergence.
New Features
- Symbol Grammar: Each family builds a vocabulary of symbol pairs and their meanings.
- Emotional State: Each agent tracks a simple emotion value based on interactions and biome.
- Emotion-Language Feedback: High emotion amplifies memory and language impact.
- Proto-sentences: Symbols appear in sequences with contextual impact.
# Initialize grammar and emotion
symbol_grammar = {}  # e.g. {fid: {(0,1): 'bond', (2,3): 'warn'}}
emotion_map = np.zeros_like(field)

# During update
for fid in np.unique(family_id_map):
    if fid == 0:
        continue
    symbol_grammar.setdefault(fid, {})
    # Learn simple symbol pairs
    for i in range(symbol_channels):
        for j in range(symbol_channels):
            pair_mask = (symbol_maps[i] > 0.005) & (symbol_maps[j] > 0.005)
            if np.any(pair_mask):
                symbol_grammar[fid][(i, j)] = np.random.choice(['gather', 'warn', 'bond', 'scatter'])

# Apply emotional influence
emotion_map += (biome_memory == 1) * 0.01  # calm
emotion_map -= (biome_memory == 2) * 0.01  # decay
emotion_map += (bond_map > 0.3) * 0.01     # love
emotion_map -= (conflict_map > 0.1) * 0.02 # fear

# Emotional feedback to memory and bonding
memory += emotion_map * 0.0002
bond_map += emotion_map * 0.0001
